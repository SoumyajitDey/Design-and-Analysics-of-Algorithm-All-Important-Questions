8.IMPLEMENTATION OF HEAP SORT:
#include<stdio.h>
void swap(int* x, int* y)
{
int t = *x;
*x = *y;
*y = t;
}

void heapify(int arr[], int n, int i)
{
int largest = i; // Initialize largest as root
int l = 2*i + 1; // left = 2*i + 1
int r = 2*i + 2; // right = 2*i + 2
if (l < n && arr[l] > arr[largest])
largest = l;
if (r < n && arr[r] > arr[largest])
largest = r;
if (largest != i)
{
swap(&arr[i], &arr[largest]);
heapify(arr, n, largest);
}
}
void heap_sort(int arr[], int n)
{
int i;
for (i = n / 2 - 1; i >= 0; i--)
heapify(arr, n, i);
for (i=n-1; i>=0; i--)
{
swap(&arr[0], &arr[i]);
heapify(arr, i, 0);
}
}
void main()
{
int arr[50];
int i, key,pos,n;
printf("enter array size:");
scanf("%d", &n);
printf("enter array:\n");
for(i=0;i<n;i++)
{
scanf("%d",&arr[i]);
}
heap_sort(arr, n);

printf("Sorted array: \n");
for(i=0;i<n;i++)
{
printf("%d, ",arr[i]);
}
}