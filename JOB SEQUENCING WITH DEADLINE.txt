18: IMPLEMENTATION OF JOB SEQUENCING WITH DEADLINE
PROBLEM:
#include<stdio.h>
int time_slot[50];
int job_id[50];
int total_profit=0;

void job_sequencing(int a[], int b[], int n)
{
int i,j,time,temp;
for(i=0;i<n;i++)
{
time_slot[i]=0;
}
for(i=0;i<n;i++)
{
job_id[i]=i+1;
}
for (i = 0; i < n-1; i++)
{
for (j = 0; j < n-i-1; j++)
{
if (a[j] < a[j+1])
{
temp = a[j];
a[j] = a[j+1];
a[j+1]=temp;
temp = b[j];
b[j] = b[j+1];
b[j+1]=temp;
temp = job_id[j];
job_id[j] = job_id[j+1];
job_id[j+1]=temp;
}
}
}
for(i=0;i<n;i++)

{
time = b[i];
if(time_slot[time-1] == 0)
{
time_slot[time-1]=job_id[i];
total_profit = total_profit+a[i];
//printf("\njob at time slot %d = %d", time, time_slot[time-1]);
}
else if(time_slot[time-1] > 0)
{
for(j=time-2;j>=0;j--)
{
if(time_slot[j]==0)
{
time_slot[j]=job_id[i];
//printf("\njob at time slot %d = %d", j+1, time_slot[j]);
total_profit = total_profit+a[i];
break;
}
}
}
}
printf("\nthe jobs are:\n");
int max_d = 0;
for(i=0;i<n;i++)
{
if(b[i]>max_d)
max_d = b[i];
}
for(i=0;i<max_d;i++)
{
printf("%d ", time_slot[i]);
}
printf("\ntotal profit = %d", total_profit);
}
void main()
{
int n,i,j;
int profit[50];

int deadline[50];
printf("\nenter no of jobs=");
scanf("%d", &n);
printf("\nenter the job details:\n");
for(i=0;i<n;i++)
{
printf("\nenter the profit for job%d=",i+1);
scanf("%d",&profit[i]);
printf("\nenter the deadline for job%d=",i+1);
scanf("%d",&deadline[i]);
}
job_sequencing(profit, deadline, n);

}